pandoc --list-highlight-styles
help(quarto)
help.search('quarto')
install.packages("quarto")
require(quarto)
pandoc --list-highlight-styles
help(glossary)
help.search('gloassary')
help("quarto")
help(install.packages)
installed.packages()
ifelse(require(MASS),'y','n')
ifelse(require(glossary),'y','n')
ifelse(require(glossary,quietly=TRUE),'y','n')
ifelse(require('glossary',quietly=TRUE),'y','n')
ifelse(require('MASS',quietly=TRUE),'y','n')
help(control)
help(Control)
help(install.packages)
installed.packages()[,1]
help(nmle)
help(nlme)
help(MASS)
help.search('zinf')
help.search('zinb')
help.search('zinb.glm')
help.search('glm.zinb')
help.search('hurdle')
help.search('zero-inflated')
help.search('hurdle')
help(pscl)
#Package management for SAURON
sauron.packages <- c('knitr','quarto','rmarkdown','MASS','pscl')
testpack <- function(package){
if !require(package,quietly=TRUE){
#Package management for SAURON
sauron.packages <- c('knitr','quarto','rmarkdown','MASS','pscl')
testpack <- function(package){
if (require(package,quietly=TRUE)==FALSE){
install.packages(package,quiet=TRUE)
require(package,quietly=TRUE)
}
}
sapply(sauron.packages,testpack)
install.packages(package, quiet = TRUE)
install.packages(package, quiet = TRUE)
install.packages(package, quiet = TRUE)
install.packages(package, quiet = TRUE)
help("install.packages")
require('package'MASS,quietly=TRUE)
require('MASS',quietly=TRUE)
require('MASS',quietly=TRUE)==TRUE
require('MASS',quietly=TRUE)==FALSE
help(reauire)
help(require)
help(sapply)
help(install.packages)
install.packages('thematic')
help("lines")
install.packages('VennDiagrams')
install.packages('VennDiagram')
require(VennDiagram)
help("venn.diagram")
help(symbols)
help(text)
help(symbols)
symbols(x=1,y=1,circles=0.8,inches=FALSE,fg='white',bg='grey80',
xlim=c(0,3),ylim=c(0,2),xaxt='n',yaxt='n',
xlab=NULL,ylab=NULL,add=FALSE)
symbols(x=1,y=1,circles=0.8,inches=FALSE,fg='white',bg='grey80',
xlim=c(0,3),ylim=c(0,2),xaxt='n',yaxt='n',
xlab=NA,ylab=NA,add=FALSE)
help(par)
52*51*50*49*48
choose(1.7e6,100)
choose(1.7e6,5)
choose(52,5)
choose(6,2)
factorial(24)
factorial(24)/factorial(6)/factorial(4)
factorial(24)/(factorial(6)^4)/(factorial(4)^6)
factorial(24)/factorial(6)/(factorial(4)^6)
52*3*48*47 * 46
52!/47!
52*51*50*49*48
161890560/311875200
52*3*49*44*40
(52*3*49*44*40)/311875200
(52*3*48*44*40)/311875200
choose(15,5)
450/3003
choose(10,1)*choose(5,4)
501/3003
1/6
help(&)
help.search('&')
help(outer)
(1:5) %o% (2:6)
outer(1:5,2:6,paste0)
help("datasets")
datasets
require(datasets)
help("datasets")
head(crimtab)
head(mdeaths)
mdeaths
Nile
head(precip)
head(state)
state
state.x77
head(USArrests)
require(tidyverse)
install.packages('tidyverse')
require(tidyverse)
help(filter)
state.x77 %>% filter(Population<500 | Area>1e5)
state.x77 %>% as_tibble
(states <- state.x77 %>% as_tibble)%>% head
states %>% filter(Population<500 | Area>1e5)
union(1:8,3:10)
intersection(1:8,3:10)
intersect(1:8,3:10)
is.element('j',letters)
is.element('J',letters)
is.element(c('a','B','c'),letters)
letters
setdiff(1:8,3:10)
setdiff(1:5,1:10)
setdiff(1:5,11)
setdiff(3:10,1:8)
setequal(1:8,3:10)
setequal(1:8,1:5)
setequal(1:8,8:1)
setequal(c(1,4,9),(1:3)^2)
help(choose)
factorial(1:5)
3/11
choose(13,2)*choose(4,2)*choose(5,2)*choose(12,3)/choose(52,5)
choose(13,1)*choose(4,2)*choose(5,2)*choose(12,3)/choose(52,5)
choose(13,1)*choose(4,2)*choose(12,3)*4*4*4/choose(52,5)
134534400/311875200
52*3*48*44*40*10
52*3*48*44*40*10/(52*51*50*49*48)
52*51*50*49*48
choose(12,3)
choose(12,4)
4^3
choose(365,23)
(365^23 - choose(365,23))/(365^23)
permute <- function(n,k) factorial(n)/factorial(n-k)
1 - permute(365,23)/(365^23)
1 - factorial(365)/(365^23)/factorial(342)
1 - exp(sum(log(365:343))-23*log(365))
365^23
prod(365:343)
prod(365:343)/365^23
1-prod(365:343)/365^23
factorial(365)
1/70
1/choose(8,4)
help(par)
par("pin")
par("pin")
1/6
1/256
install.packages('bslib')
install.packages('bslib')
install.packages('shinylive')
require(shinylive)
dnorm(0)
help(plot)
c(0,mean(dnorm(0),1))
hist(rpois(n=1000,lambda=100))
hist(rbinom(n=1000,size=100,prob=0.3))
require(shiny)
install.packages('shiny')
requrie(shiny)
require(shiny)
install.packages('bslib')
require(bslib)
set.seed(2061)
coins <- sample(0:1,50,TRUE,c(0.4,0.6))
coins
sum(coins)
(coins <- c(rep(1,27),rep(0,23)))
